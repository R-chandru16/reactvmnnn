{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\react-v6wmgw\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { Form, Field } from \"@progress/kendo-react-form\";\nimport { Input, Checkbox } from \"@progress/kendo-react-inputs\";\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\nimport countries from \"./countries\";\n\nconst CustomInput = _ref => {\n  let {\n    fieldType,\n    ...others\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, Object.assign({\n    type: fieldType\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(ValidationMessage, Object.assign({}, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  })));\n};\n\n_c = CustomInput;\n\nconst CustomDropDown = _ref2 => {\n  let {\n    options,\n    ...others\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DropDownList, Object.assign({\n    data: options\n  }, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(ValidationMessage, Object.assign({}, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  })));\n};\n\n_c2 = CustomDropDown;\n\nconst CustomCheckbox = _ref3 => {\n  let { ...props\n  } = _ref3;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(ValidationMessage, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  })));\n};\n\n_c3 = CustomCheckbox;\n\nconst ValidationMessage = _ref4 => {\n  let {\n    valid,\n    visited,\n    validationMessage\n  } = _ref4;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !valid && visited && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  }, validationMessage));\n};\n\n_c4 = ValidationMessage;\n\nconst emailValidator = value => new RegExp(/\\S+@\\S+\\.\\S+/).test(value) ? \"\" : \"Please enter a valid email.\";\n\nconst requiredValidator = value => {\n  return value ? \"\" : \"This field is required\";\n};\n\nexport default function App() {\n  const handleSubmit = data => {\n    console.log(`\n      Email: ${data.email}\n      Password: ${data.password}\n      Country: ${data.country}\n      Accepted Terms: ${data.acceptedTerms}\n    `);\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    render: formRenderProps => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: formRenderProps.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Create Account\"), /*#__PURE__*/React.createElement(Field, {\n      label: \"Email\",\n      name: \"email\",\n      fieldType: \"email\",\n      component: CustomInput,\n      validator: [requiredValidator, emailValidator],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Password\",\n      name: \"password\",\n      fieldType: \"password\",\n      component: CustomInput,\n      validator: requiredValidator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Country\",\n      name: \"country\",\n      component: CustomDropDown,\n      options: countries,\n      validator: requiredValidator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"I accept the terms of service\",\n      name: \"acceptedTerms\",\n      component: CustomCheckbox,\n      validator: requiredValidator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !formRenderProps.allowSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"Submit\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  });\n}\n_c5 = App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CustomInput\");\n$RefreshReg$(_c2, \"CustomDropDown\");\n$RefreshReg$(_c3, \"CustomCheckbox\");\n$RefreshReg$(_c4, \"ValidationMessage\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["C:/Users/Administrator/Downloads/react-v6wmgw/src/App.js"],"names":["React","Component","Form","Field","Input","Checkbox","DropDownList","countries","CustomInput","fieldType","others","CustomDropDown","options","CustomCheckbox","props","ValidationMessage","valid","visited","validationMessage","emailValidator","value","RegExp","test","requiredValidator","App","handleSubmit","data","console","log","email","password","country","acceptedTerms","event","preventDefault","formRenderProps","onSubmit","allowSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Field } from \"@progress/kendo-react-form\";\nimport { Input, Checkbox } from \"@progress/kendo-react-inputs\";\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\nimport countries from \"./countries\";\n\nconst CustomInput = ({ fieldType, ...others }) => {\n  return (\n    <div>\n      <Input\n        type={fieldType}\n        {...others} />\n      <ValidationMessage {...others} />\n    </div>\n  );\n};\n\nconst CustomDropDown = ({ options, ...others }) => {\n  return (\n    <div>\n      <DropDownList\n        data={options}\n        {...others} />\n      <ValidationMessage {...others} />\n    </div>\n  )\n}\n\nconst CustomCheckbox = ({ ...props }) => {\n  return (\n    <div>\n      <Checkbox {...props} />\n      <ValidationMessage {...props} />\n    </div>\n  );\n};\n\nconst ValidationMessage = ({ valid, visited, validationMessage }) => {\n  return (\n    <>\n    { !valid && visited &&\n        (<div className=\"required\">{validationMessage}</div>)}\n    </>\n  );\n}\n\nconst emailValidator = (value) => (\n  new RegExp(/\\S+@\\S+\\.\\S+/).test(value) ? \"\" : \"Please enter a valid email.\"\n);\nconst requiredValidator = (value) => {\n  return value ? \"\" : \"This field is required\";\n}\n\nexport default function App() {\n  const handleSubmit = (data) => {\n    console.log(`\n      Email: ${data.email}\n      Password: ${data.password}\n      Country: ${data.country}\n      Accepted Terms: ${data.acceptedTerms}\n    `);\n    \n    event.preventDefault();\n  }\n\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      render={(formRenderProps) => (\n        <form onSubmit={formRenderProps.onSubmit}>\n          <h1>Create Account</h1>\n\n          <Field\n            label=\"Email\"\n            name=\"email\"\n            fieldType=\"email\"\n            component={CustomInput}\n            validator={[requiredValidator, emailValidator]} />\n          \n          <Field\n            label=\"Password\"\n            name=\"password\"\n            fieldType=\"password\"\n            component={CustomInput}\n            validator={requiredValidator} />\n\n          <Field \n            label=\"Country\"\n            name=\"country\"\n            component={CustomDropDown}\n            options={countries}\n            validator={requiredValidator} />\n\n          <Field\n            label=\"I accept the terms of service\"\n            name=\"acceptedTerms\"\n            component={CustomCheckbox}\n            validator={requiredValidator} />\n\n          <button disabled={!formRenderProps.allowSubmit}>\n            Submit\n          </button>\n        </form>\n      )}>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}